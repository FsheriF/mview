## -*- Makefile -*-
###########################################################################
SHELL = /bin/sh

AWK   	  = /usr/bin/awk
BASENAME  = /usr/bin/basename
CAT   	  = /bin/cat
CC    	  = /usr/bin/cc
CHMOD     = /bin/chmod
CP    	  = /bin/cp
CPP   	  = /usr/bin/cpp
ECHO      = /bin/echo
FIND  	  = /usr/bin/find
GREP  	  = /usr/bin/grep
LS        = /bin/ls
M4    	  = /usr/bin/m4
MKDIR     = /bin/mkdir -p
MV    	  = /bin/mv
PWD       = /bin/pwd
RM    	  = /bin/rm -f
RSYNC     = /usr/bin/rsync -avH --delete
SED   	  = /bin/sed
SORT      = /bin/sort
TAR   	  = /bin/tar
TOUCH     = /bin/touch
TR        = /usr/bin/tr
WC    	  = /usr/bin/wc
XARGS 	  = /usr/bin/xargs

PROJECT   = MView
OLD_ROOT  = $(HOME)
NEW_ROOT  = $(HOME)/dist

OLD_HOME  = $(OLD_ROOT)
NEW_HOME  = /path/to/mview/unpacked/folder

OLD_PERL  = /usr/bin/perl
NEW_PERL  = /usr/bin/perl

SPHINX_HTML  = doc/Sphinx/build/html
GH_PAGES_DIR = gh-pages

#for installation of subtrees, set up in each Makefile
#TREE    = this subdirectory path relative to $NEW_ROOT
#DIRS    = list of subdirectories
#FILE    = list of generic files at this level
#EXES    = list of executables at this level
#SRCS    = list of source files at this level
#HTML    = list of html files at this level

DEST = $(NEW_ROOT)/$(PROJECT)/$(TREE)

#permissions for the source material
SRCS_DIR_PERM = 0755
SRCS_FIL_PERM = 0644
SRCS_EXE_PERM = 0755

#permissions for the destination material
DEST_DIR_PERM = 0755
DEST_FIL_PERM = 0444
DEST_EXE_PERM = 0755

#fix: perl path, perl library path
FIX_STRINGS = $(SED) \
	-e "s;^\#!$(OLD_PERL).*;\#!$(NEW_PERL);" \
	-e "s;$(OLD_HOME);$(NEW_HOME);g"

MAKEFLAGS = --no-print-directory

###########################################################################
#build destination tree, show current directory first
all: $(NEW_ROOT) force
	@$(ECHO) "[`$(PWD)`]"
	@$(MAKE) _all

#really build destination tree
_all: $(EXES) $(FILE) $(SRCS) $(HTML)
	@for i in . $(DIRS); do [ $$i = . ] && continue; \
	    $(MAKE) -C $$i all; \
	done

$(NEW_ROOT): force
	@[ -d $@ ] || $(MKDIR) $@

#fix permissions of source tree
perms: force
	@$(ECHO) "[`$(PWD)`]"
	@for i in . $(FILE); do [ $$i = . ] && continue; \
	    [ -f $$i ] && $(CHMOD) $(SRCS_FIL_PERM) $$i; \
	done
	@for i in . $(SRCS); do [ $$i = . ] && continue; \
	    [ -f $$i ] && $(CHMOD) $(SRCS_FIL_PERM) $$i; \
	done
	@for i in . $(EXES); do [ $$i = . ] && continue; \
	    [ -f $$i ] && $(CHMOD) $(SRCS_EXE_PERM) $$i; \
	done
	@for i in . $(HTML); do [ $$i = . ] && continue; \
	    [ -f $$i ] && $(CHMOD) $(SRCS_FIL_PERM) $$i; \
	done
	@for i in . $(DIRS); do [ $$i = . ] && continue; \
	    [ -d $$i ] && $(CHMOD) $(SRCS_DIR_PERM) $$i; \
	    (cd $$i ; make $@); \
	done

#install executables
$(EXES): force
	@$(ECHO) "installing exe: $@"
	@[ -d $(DEST) ] || $(MKDIR) $(DEST)
	@$(RM) $(DEST)/$@
	@$(FIX_STRINGS) < $@ > $(DEST)/$@
	@$(CHMOD) $(DEST_EXE_PERM) $(DEST)/$@

#install ordinary files
$(FILE): force
	@$(ECHO) "installing file: $@"
	@[ -d $(DEST) ] || $(MKDIR) $(DEST)
	@$(RM) $(DEST)/$@
	@$(FIX_STRINGS) < $@ > $(DEST)/$@
	@$(CHMOD) $(DEST_FIL_PERM) $(DEST)/$@

#install sources
$(SRCS): force
	@$(ECHO) "installing source: $@"
	@[ -d $(DEST) ] || $(MKDIR) $(DEST)
	@$(RM) $(DEST)/$@
	@$(FIX_STRINGS) < $@ > $(DEST)/$@
	@$(CHMOD) $(DEST_FIL_PERM) $(DEST)/$@

#install html
$(HTML): force
	@$(ECHO) "installing HTML: $@"
	@[ -d $(DEST)/$@ ] || $(MKDIR) $(DEST)/$@
	@$(RSYNC) $(SPHINX_HTML)/ $(DEST)/$@
	@[ -d $(GH_PAGES_DIR) ] || $(MKDIR) $(GH_PAGES_DIR)
	@$(RSYNC) $(SPHINX_HTML)/ $(GH_PAGES_DIR)/

#tidy source tree
clean: force
	@$(ECHO) "[`$(PWD)`]"
	@$(RM) *.swp \#* *~
	@for i in . $(DIRS); do [ $$i = . ] && continue; \
	    $(MAKE) -C $$i $@; \
	done

#count lines summary
lines:	force
	@$(MAKE) _lines | $(AWK) '/^[/  / *[0-9]/ {c+=$$1;t+=$$2;print} END {printf "Totals: %5d %5d\n", c, t}'

#really count lines (without blank lines and perl comments, all lines)
_lines:	force
	@$(ECHO) "[`$(PWD)`]"
	    @for i in . $(SRCS) $(EXES); do [ $$i = . ] && continue; \
	    $(AWK) '{t++} !/^ *(#.*)?$$/ {c++} END {printf "%5d %5d  %s\n", c, t, FILENAME}' $$i; \
	done
	@for i in . $(DIRS); do [ $$i = . ] && continue; \
	    $(MAKE) -C $$i $@; \
	done

force:

###########################################################################
